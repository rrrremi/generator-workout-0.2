import { NextResponse } from 'next/server';

export async function POST(request) {
  try {
    const body = await request.json();
    const { 
      fitnessLevel = 'intermediate', 
      focusAreas = ['full body'], 
      duration = 45, 
      equipment = 'basic' 
    } = body;

    console.log(`Generating workout: ${fitnessLevel} level, ${focusAreas.join(', ')}, ${duration} minutes, ${equipment} equipment`);
    
    // Generate different workouts based on focus areas
    let mainExercises = [];
    
    if (focusAreas.includes('upper body') || focusAreas.includes('full body')) {
      mainExercises.push(
        { name: "Push-ups", sets: 3, reps: 12, rest: "60 seconds", description: "Standard push-ups with proper form" },
        { name: "Dumbbell Rows", sets: 3, reps: 10, rest: "60 seconds", description: "Single arm rows with dumbbells" }
      );
    }
    
    if (focusAreas.includes('lower body') || focusAreas.includes('full body')) {
      mainExercises.push(
        { name: "Bodyweight Squats", sets: 3, reps: 15, rest: "60 seconds", description: "Full range of motion squats" },
        { name: "Lunges", sets: 3, reps: 10, rest: "60 seconds", description: "Alternating legs, 10 reps each leg" }
      );
    }
    
    if (focusAreas.includes('core') || focusAreas.includes('full body')) {
      mainExercises.push(
        { name: "Plank", sets: 3, reps: "30 seconds", rest: "45 seconds", description: "Core stabilization exercise" },
        { name: "Russian Twists", sets: 3, reps: 20, rest: "45 seconds", description: "Seated twisting motion for obliques" }
      );
    }
    
    if (focusAreas.includes('cardio')) {
      mainExercises.push(
        { name: "Mountain Climbers", sets: 3, reps: "30 seconds", rest: "45 seconds", description: "Fast-paced for cardio" },
        { name: "Jumping Jacks", sets: 3, reps: "45 seconds", rest: "30 seconds", description: "Full body cardio movement" }
      );
    }
    
    // If no specific focus areas match or array is still empty, add default exercises
    if (mainExercises.length === 0) {
      mainExercises = [
        { name: "Push-ups", sets: 3, reps: 12, rest: "60 seconds", description: "Standard push-ups with proper form" },
        { name: "Bodyweight Squats", sets: 3, reps: 15, rest: "60 seconds", description: "Full range of motion squats" },
        { name: "Plank", sets: 3, reps: "30 seconds", rest: "45 seconds", description: "Core stabilization exercise" },
        { name: "Lunges", sets: 3, reps: 10, rest: "60 seconds", description: "Alternating legs, 10 reps each leg" },
        { name: "Mountain Climbers", sets: 3, reps: "30 seconds", rest: "45 seconds", description: "Fast-paced for cardio" }
      ];
    }
    
    // Adjust difficulty based on fitness level
    if (fitnessLevel === 'beginner') {
      mainExercises = mainExercises.map(exercise => ({
        ...exercise,
        sets: Math.max(2, exercise.sets - 1),
        reps: typeof exercise.reps === 'number' ? Math.max(8, exercise.reps - 4) : exercise.reps
      }));
    } else if (fitnessLevel === 'advanced') {
      mainExercises = mainExercises.map(exercise => ({
        ...exercise,
        sets: exercise.sets + 1,
        reps: typeof exercise.reps === 'number' ? exercise.reps + 2 : exercise.reps
      }));
    }
    
    // Return the workout plan
    return NextResponse.json({
      warmup: [
        { name: "Dynamic Stretching", duration: "5 minutes", description: "Arm circles, leg swings, hip rotations" },
        { name: "Light Cardio", duration: "3 minutes", description: "Jumping jacks and high knees" }
      ],
      mainWorkout: mainExercises,
      cooldown: [
        { name: "Static Stretching", duration: "5 minutes", description: "Hold each stretch for 20-30 seconds" },
        { name: "Deep Breathing", duration: "2 minutes", description: "Focus on slow, controlled breaths" }
      ]
    });
  } catch (error) {
    console.error('Error generating workout:', error);
    return NextResponse.json(
      { error: 'Failed to generate workout plan' },
      { status: 500 }
    );
  }
}
